//-----------------------------------------Receiver module
module uart_rx (
    input wire clk,
    input wire reset,
    input wire rx,
    input wire baud_tick,
    output reg [7:0] rx_data,
    output reg rx_done
);
    // State definitions
    parameter IDLE = 0, START = 1, DATA = 2, STOP = 3;
    reg [1:0] state = IDLE;
    reg [2:0] bit_index;
    reg [7:0] data;

    always @(posedge clk or posedge reset) begin
        if (reset) begin
            state <= IDLE;
            rx_done <= 0;
            bit_index <= 0;
            data <= 0;
        end else if (baud_tick) begin
            case (state)
                IDLE: begin
                    if (~rx) begin  // Detect start bit
                        state <= DATA;
                        bit_index<=0;
                    end
                end
                START: begin
                    state <= DATA;
                    bit_index <= 0;
                end
                DATA: begin
                    data[bit_index] <= rx;
                    bit_index <= bit_index + 1;
                    if (bit_index == 7) state <= STOP;
                end
                STOP: begin
                    rx_data <= data;
                    rx_done <= 1;
                    state <= IDLE;
                end
            endcase
        end
    end 
endmodule
